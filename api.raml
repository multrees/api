#%RAML 1.0
title: Multrees WebAPI
version: 1
baseUri: https://api.multrees.com/v{version}/{fi}
baseUriParameters:
  fi:
    type: string
    description: The Financial Institute's short-code, supplied by Multrees.
    displayName: Financial Institute
protocols: [ HTTPS ]
mediaType:
  - application/json
description: Multrees Web API provides secure, programmatic access into the core elements of Multrees' services and data.  Version 1 focusses on exposing out 'GET' functionality for integration into Digital and Reporing Tools.  Version 2 will focus more on POST/PUT for integration into CRM and platform technologies.
types:
  Account:
    displayName: Account
    description: An investment or cash account.
    type: object
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
    example:
      customerId : 123456
      accountName : "John Smith ISA"
  Accounts:
    description: An array of accounts.
    type: Account[]
    minItems: 1
  Beneficiary:
    description: A beneficiary.
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
      date:
        type: date-only
        required: true
      internal:
        type: boolean
        required: true
      relationship:
        type: string
    example:
      customerId : "ABC1234"
      date: "2017-01-20"
      accountName : "Account Number 1"
      internal: true
      relationship: ""
  Beneficiaries:
    description: An array of beneficiaries.
    type: Beneficiary[]
    minItems: 1
  Client:
    description: A client.
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
      customerType :
        type: string
        required: true
      baseCurrency :
        type: string
        required: true
      taxResidency :
        type: string
        required: true
      taxResidency :
        type: string
        required: true
      EffectiveDate :
        type: date-only
        required: true
      taxDomicile :
        type: string
        required: true
      taxYearEnd :
        type: string
        required: true
      taxStatus :
        type: string
        required: true
      accountingMethod :
        type: string
        required: true
      preferredLanguage :
        type: string
        required: true
      title :
        type: string
        required: true
      firstname :
        type: string
        required: true
      lastName :
        type: string
        required: true
      gender :
        type: string
        required: true
      dateOfBirth :
        type: date-only
        required: true
      maritalStatus :
        type: string
        required: true
      birthCountry :
        type: string
        required: true
      addressType :
        type: string
        required: true
      address1 :
        type: string
        required: true
      address2 :
        type: string
        required: true
      address3 :
        type: string
        required: true
      city :
        type: string
        required: true
      postalCode :
        type: string
        required: true
      birthCountry :
        type: string
        required: true
      email :
        type: string
        required: true
    example:
      customerId : ABC1234
      accountName : Brian Smith ISA Account
      customerType : Individual
      baseCurrency : GBP
      taxResidency : UK
      taxResidencyEffectiveDate : 10/10/2004
      taxDomicile : UK
      taxYearEnd : 01/04
      taxStatus : Normal
      accountingMethod : FIFO
      preferredLanguage : English
      title : Mr
      firstname : Brian
      lastName : Smith
      gender : Male
      dateOfBirth : 01/05/1974
      maritalStatus : Married
      birthCountry : UK
      addressType : Home
      address1 : 10 Downing Street
      address2 :
      address3 :
      city : London
      postalCode : AB13 8UK
      birthCountry : UK
      email : Brian.Smith@wealth.com
  Clients:
    description: An array of clients.
    type: Client[]
    minItems: 1
  Holding:
    description: A individual account holding
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
    example:
      customerId : "ABC1234"
      accountName : "Brian Smith ISA Account"
  Holdings:
    description: An array of holdings.
    type: Holding[]
    minItems: 1
  Payment:
    description: A individual payment
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
      notice:
        type: date-only
        required: false
        displayName: Advanced Notice
        description: |
          If this is an advanced notice then this is the settlement date.
          Otherwise it is the date of the payment.
      repeat:
        type: string
        required: false
        displayName: Regular Payment
        description: If this is a regular payment then describe the repeat.
    example:
      customerId : "ABC1234"
      accountName : "Brian Smith ISA Account"
      repeat: "first day of month"
      notice: "2017-02-28"
  Payments:
    description: An array of payments.
    type: Payment[]
    minItems: 1
  Trade:
    description: A trade.
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
    example:
      customerId : "ABC1234"
      accountName : "Brian Smith ISA Account"
  Trades:
    description: An array of trades.
    type: Trade[]
    minItems: 1
resourceTypes:
/clients:
  displayName: Clients
  description: Collection of all clients ... [TODO]
  get:
    description: Retrieve all clients.
      queryParameters:
        SearchTerm:
          displayName: Search Term
          type: string
          description: Search on Account Name
          example: Smith
          required: false
    responses:
      200:
        body:
          application/json:
            type: Clients
#  post:
#    description: Create a number of clients.
#  put:
#    description: Update a number of clients.
#  delete:
#    description: Remove a number of clients.
  /{client}:
    displayName: Client
    description: An individual or organisation investor
    get:
      description: Retrieve client details.
      queryParameters:
        SearchTerm:
          clientId: Unique client reference
      responses:
        200:
          body:
            application/json:
              type: Client
#    post:
#      description: Create a client.
#    put:
#      description: Update a client.
#    delete:
#      description: Remove a client.
/accounts:
  displayName: Accounts
  description: Collection of all investment and cash accounts
  get:
    description: Retrieve all cash and investment accounts.
      Group:
        displayName: Level
        type: string
        description: GROUP or CUST
        example: CASH
        required: false
      AccountType:
        displayName: Account Type
        type: string
        description:CASH or INV
        example: CASH
        required: false
      SearchTerm:
        displayName: Search Term
        type: string
        description: Search on Account Name
        example: Smith
        required: false    
    responses:
      200:
        body:
          application/json:
            type: Accounts
#  post:
#    description: Create a number of accounts.
#  put:
#    description: Update a number of accounts.
#  delete:
#    description: Remove a number of accounts.
  /{account}:
    displayName: Account
    description: Investment or cash accounts
    get:
      description: Retrieve an account.
      queryParameters:
      responses:
        200:
          body:
            application/json:
              type: Account
#    post:
#      description: Create an account.
#    put:
#      description: Update an account.
#    delete:
#      description: Remove an account.
/beneficiaries:
  displayName: Beneficiaries
  description: Collection of all beneficiaries for a client
  get:
    description: Retrieve all beneficiaries.
      queryParameters:
        CustomerId:
          displayName: Customer Id
          type: string
          description: Customer Unique Reference
          example: ABC1234
          required: false
    responses:
      200:
        body:
          application/json:
            type: Beneficiaries
#  post:
#    description: Create a number of beneficiaries.
#  put:
#    description: Update a number of beneficiaries.
#  delete:
#    description: Remove a number of beneficiaries.
  /{beneficiary}:
    displayName: Beneficiary
    description: A beneficiary of the client
    get:
      description: Retrieve a beneficiary.
      queryParameters:
        CustomerId:
          displayName: Beneficiary Id
          type: string
          description: Beneficiary Unique Reference
          example: BEN1234
          required: false
      responses:
        200:
          body:
            application/json:
              type: Beneficiary
#    post:
#      description: Create a beneficiary.
#    put:
#      description: Update a beneficiary.
#    delete:
#      description: Remove a beneficiary.
/holdings:
  displayName: Holdings
  description: Collection of all holdings cor a client.
  get:
    description: Retrieve all holdings.
    queryParameters:
      extractDate:
        displayName: Extract Date
        type: datetime
        description: Point in time of valuation, default to latest
        required: false
    responses:
      200:
        body:
          application/json:
            type: Holdings
  /{holding}:
    displayName: Holding
    description: A specific holding in an asset
    queryParameters:
      extractDate:
        displayName: Extract Date
        type: datetime
        description: Point in time of valuation, default to latest
        required: false
      securityRef:
        displayName: Security reference ID
        type: string
        description: Unique security reference
        required: false
    get:
      responses:
        200:
          body:
            application/json:
              type: Holding
#    post:
#      body:
#        application/json:
#          schema: Holding
#      responses:
#        200:
    /classifications/{classification}:
      get:
        responses:
          200:
            body:
              application/json:
                type: Holdings
    /accounts/{account}:
      get:
        responses:
          200:
            body:
              application/json:
                type: Holdings
/payments:
  displayName: Payments
  description: Collection of all payments made for an account or client.
  get:
    description: Retrieve all payments.
    queryParameters:
      CustomerId:
        displayName: Customer Id
        type: string
        description: Customer Unique Reference
        example: ABC1234
        required: false
      AccountId:
        displayName: Account Id
        type: string
        description: Account Unique Reference
        example: ABC1234
        required: false
    responses:
      200:
        body:
          application/json:
            type: Payments
#  post:
#    description: Create a number of payments.
#  put:
#    description: Update a number of payments.
#  delete:
#    description: Remove a number of payments.
  /{payment}:
    description: A single payment from an account.
    get:
      description: Retrieve a payment.
      queryParameters:
        PaymentId:
          displayName: Payment Id
          type: string
          description: Payment Unique Reference
          example: PAY1234
          required: false
      responses:
        200:
          body:
            application/json:
              type: Payment
#    post:
#      description: Create a payment.
#    put:
#      description: Update a payment.
#    delete:
#      description: Remove a payment.
/trades:
  displayName: Trades
  description: Collection of all trades.
  get:
    description: Retrieve all trades.
    queryParameters:
      CustomerId:
        displayName: Customer Id
        type: string
        description: Customer Unique Reference
        example: ABC1234
        required: false
      AccountId:
        displayName: Account Id
        type: string
        description: Account Unique Reference
        example: ABC1234
        required: false
    responses:
      200:
        body:
          application/json:
            type: Trades
#  post:
#    description: Create a number of trades.
#  put:
#    description: Update a number of trades.
#  delete:
#    description: Remove a number of trades.
  /{trade}:
    displayName: Trade
    description: A singel trade on an account
    get:
      description: Retrieve a single trade.
      queryParameters:
      responses:
        200:
          body:
            application/json:
              type: Trade
#    post:
#      description: Create a trade.
#    put:
#      description: Update a trade.
#    delete:
#      description: Remove a trade.
/users:
  displayName: Users
  description: Collection of all users of the Multrees Web API.
  get:
    description: Retrieve all users.
#  post:
#    description: Create a number of users.
#  put:
#    description: Update a number of users.
#  delete:
#    description: Remove a number of users.
  /{user}:
    displayName: User
    description: A user of the Multrees Web API
    get:
      description: Retieve a user.
#    post:
#      description: Create a user.
#    put:
#      description: Update a user.
#    delete:
#      description: Remove a user.
