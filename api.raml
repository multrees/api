#%RAML 1.0
title: Multrees WebAPI
version: 1
baseUri: https://api.multrees.com/v{version}/{fi}
baseUriParameters:
  fi:
    type: string
    description: The Financial Institute's short-code, supplied by Multrees.
    displayName: Financial Institute
protocols: [ HTTPS ]
mediaType:
  - application/json
description: |
  Disruption
  Open
  Breakthrough
  Gamechanger
  Innovative
  Millennial
  Leverage
  Next Generation
  Platform
  Legacy
  Digital
  Democratisation
  Anything â€¦ as-a-service
  Marketplace
types:
  Account:
    displayName: Account
    description: An investment or cash account.
    type: object
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
    example:
      customerId : "TODO"
      accountName : "TODO"
  Accounts:
    description: An array of accounts.
    type: Account[]
    minItems: 1
  Beneficiary:
    description: A beneficiary.
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
      date:
        type: date-only
        required: true
      internal:
        type: boolean
        required: true
      relationship:
        type: string
    example:
      customerId : "TODO"
      date: "2017-01-20"
      accountName : "TODO"
      internal: true
      relationship: ""
  Beneficiaries:
    description: An array of beneficiaries.
    type: Beneficiary[]
    minItems: 1
  Client:
    description: A client.
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
    example:
      customerId : "TODO"
      accountName : "TODO"
  Clients:
    description: An array of clients.
    type: Client[]
    minItems: 1
  Holding:
    description: A holding ... [TODO]
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
    example:
      customerId : "TODO"
      accountName : "TODO"
  Holdings:
    description: An array of holdings.
    type: Holding[]
    minItems: 1
  Payment:
    description: A payment ... [TODO]
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
      notice:
        type: date-only
        required: false
        displayName: Advanced Notice
        description: |
          If this is an advanced notice then this is the settlement date.
          Otherwise it is the date of the payment.
      repeat:
        type: string
        required: false
        displayName: Regular Payment
        description: If this is a regular payment then describe the repeat.
    example:
      customerId : "TODO"
      accountName : "TODO"
      repeat: "first day of month"
      notice: "2017-02-28"
  Payments:
    description: An array of payments.
    type: Payment[]
    minItems: 1
  Trade:
    description: A trade.
    properties:
      customerId:
        type: string
        required: true
      accountName:
        type: string
        required: true
    example:
      customerId : "TODO"
      accountName : "TODO"
  Trades:
    description: An array of trades.
    type: Trade[]
    minItems: 1
resourceTypes:
/clients:
  displayName: Clients
  description: Collection of all clients ... [TODO]
  get:
    description: Retrieve all clients.
    responses:
      200:
        body:
          application/json:
            type: Clients
#  post:
#    description: Create a number of clients.
#  put:
#    description: Update a number of clients.
#  delete:
#    description: Remove a number of clients.
  /{client}:
    displayName: Client
    description: A client ... [TODO]
    get:
      description: Retrieve a client.
      responses:
        200:
          body:
            application/json:
              type: Client
#    post:
#      description: Create a client.
#    put:
#      description: Update a client.
#    delete:
#      description: Remove a client.
/accounts:
  displayName: Accounts
  description: Collection of all accounts ... [TODO]
  get:
    description: Retrieve all accounts.
    responses:
      200:
        body:
          application/json:
            type: Accounts
#  post:
#    description: Create a number of accounts.
#  put:
#    description: Update a number of accounts.
#  delete:
#    description: Remove a number of accounts.
  /{account}:
    displayName: Account
    description: List of investment or cash accounts
    get:
      description: Retrieve an account.
      queryParameters:
        Group:
          displayName: Level
          type: string
          description: GROUP or CUST
          example: CASH
          required: false
        AccountType:
          displayName: Account Type
          type: string
          description:CASH or INV
          example: CASH
          required: false
        SearchTerm:
          displayName: Search Term
          type: string
          description: Search on Account Name
          example: Smith
          required: false
      responses:
        200:
          body:
            application/json:
              type: Account
#    post:
#      description: Create an account.
#    put:
#      description: Update an account.
#    delete:
#      description: Remove an account.
/beneficiaries:
  displayName: Beneficiaries
  description: Collection of all beneficiaries ... [TODO]
  get:
    description: Retrieve all beneficiaries.
    responses:
      200:
        body:
          application/json:
            type: Beneficiaries
#  post:
#    description: Create a number of beneficiaries.
#  put:
#    description: Update a number of beneficiaries.
#  delete:
#    description: Remove a number of beneficiaries.
  /{beneficiary}:
    displayName: Beneficiary
    description: A beneficiary ... [TODO]
    get:
      description: Retrieve a beneficiary.
      responses:
        200:
          body:
            application/json:
              type: Beneficiary
#    post:
#      description: Create a beneficiary.
#    put:
#      description: Update a beneficiary.
#    delete:
#      description: Remove a beneficiary.
/holdings:
  displayName: Holdings
  description: Collection of all holdings.
  get:
    description: Retrieve all holdings.
    queryParameters:
      extractDate:
        displayName: Extract Date
        type: datetime
        description: TODO
        required: false
    responses:
      200:
        body:
          application/json:
            type: Holdings
  /{holding}:
    displayName: Holding
    description: A holding ... [TODO]
    get:
      responses:
        200:
          body:
            application/json:
              type: Holding
#    post:
#      body:
#        application/json:
#          schema: Holding
#      responses:
#        200:
    /classifications/{classification}:
      get:
        responses:
          200:
            body:
              application/json:
                type: Holdings
    /accounts/{account}:
      get:
        responses:
          200:
            body:
              application/json:
                type: Holdings
/payments:
  displayName: Payments
  description: Collection of all payments.
  get:
    description: Retrieve all payments.
    queryParameters:
    responses:
      200:
        body:
          application/json:
            type: Payments
#  post:
#    description: Create a number of payments.
#  put:
#    description: Update a number of payments.
#  delete:
#    description: Remove a number of payments.
  /{payment}:
    description: A single payment ... [TODO]
    get:
      description: Retrieve a payment.
      responses:
        200:
          body:
            application/json:
              type: Payment
#    post:
#      description: Create a payment.
#    put:
#      description: Update a payment.
#    delete:
#      description: Remove a payment.
/trades:
  displayName: Trades
  description: Collection of all trades.
  get:
    description: Retrieve all trades.
    queryParameters:
    responses:
      200:
        body:
          application/json:
            type: Trades
#  post:
#    description: Create a number of trades.
#  put:
#    description: Update a number of trades.
#  delete:
#    description: Remove a number of trades.
  /{trade}:
    displayName: Trade
    description: A trade ... [TODO]
    get:
      description: Retrieve a single trade.
      responses:
        200:
          body:
            application/json:
              type: Trade
#    post:
#      description: Create a trade.
#    put:
#      description: Update a trade.
#    delete:
#      description: Remove a trade.
/users:
  displayName: Users
  description: Collection of all users.
  get:
    description: Retrieve all users.
#  post:
#    description: Create a number of users.
#  put:
#    description: Update a number of users.
#  delete:
#    description: Remove a number of users.
  /{user}:
    displayName: User
    description: A user ... [TODO]
    get:
      description: Retieve a user.
#    post:
#      description: Create a user.
#    put:
#      description: Update a user.
#    delete:
#      description: Remove a user.
